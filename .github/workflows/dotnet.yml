# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build MAUI Desktop App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages   # 'actions/setup-dotnet' to cache packages
  DOTNET_INSTALL_DIR: ${{ github.workspace }}/.dotnet       # 'actions/setup-dotnet' to cache .NET SDK
  APPIUM_HOME: ${{ github.workspace }}/.appium    

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # verify:
  #   uses: ./.github/workflows/verify.yml 
    
  # build:
  #   runs-on: windows-latest

  #   steps:
  #   - uses: actions/checkout@v4
    
  #   - uses: actions/setup-dotnet@v4
  #     with:
  #       global-json-file: './global.json'
  #       cache: true
  #       cache-dependency-path: '**/packages.lock.json'

  #   - name: Setup .NET MAUI
  #     uses: ./.github/actions/setup-maui
  #     with:
  #       SOLUTION: './github-actions-maui-app.sln'
  #       GLOBAL_JSON: './global.json'

  #   - run: dotnet restore --locked-mode
      
  #   - name: Publish application 
  #     run: dotnet publish .\Maui.App\ -f net8.0-windows10.0.19041.0 -c Release -bl:app_bin/publish.binlog -o ./app_bin
    
  #   - name: Upload App as Artifact
  #     uses: actions/upload-artifact@v4
  #     with:
  #       path: ./app_bin
  #       if-no-files-found: error
  #       retention-days: 2
  #       overwrite: true

  test-ui:
    runs-on: windows-latest
    # needs: build
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-dotnet@v4
      with:
        global-json-file: './global.json'
        cache: true
        cache-dependency-path: '**/packages.lock.json'

    - uses: actions/setup-node@v4
      with:
        cache: npm
        cache-dependency-path: ./package-lock.json
        node-version-file: ./package.json

    ## TODO: Make custom action to install and cache appium
    - run: npm install -g appium@$(node -p "require('./package.json').devDependencies['appium']")
    
    - name: Cache Appium drivers
      id: cache-appium
      uses: actions/cache@v4
      with:
        path: ${{ env.APPIUM_HOME }}
        key: appium-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          appium-${{ runner.os }}-
        
    - run: appium driver install --source npm appium-windows-driver@$(node -p "require('./package.json').devDependencies['appium-windows-driver']")
      if: ${{ steps.cache-appium.outputs.cache-hit != 'true' }}

    - run: echo $env:APPIUM_HOME
      shell: pwsh
    
    - run: ls ${{ env.APPIUM_HOME }}

    - run: echo $(get-command appium).Source
      shell: pwsh
            
    # - name: Download App Artifact
    #   uses: actions/download-artifact@v4

    - run: |
        node --version
        npm --version
        appium --version
        appium driver list --installed

    # - name: Upload Test Results
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: test-results
    #     path: ./TestResults